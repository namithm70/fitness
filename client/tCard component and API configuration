[1mdiff --git a/client/src/components/Community/PostCard.tsx b/client/src/components/Community/PostCard.tsx[m
[1mindex 88fc8f1..e51a473 100644[m
[1m--- a/client/src/components/Community/PostCard.tsx[m
[1m+++ b/client/src/components/Community/PostCard.tsx[m
[36m@@ -83,7 +83,6 @@[m [mconst PostCard: React.FC<PostCardProps> = ({ post, onInteraction }) => {[m
   const getPostTypeIcon = () => {[m
     switch (post.type) {[m
       case 'photo': return <Image className="w-4 h-4" />;[m
[31m-      case 'video': return <Video className="w-4 h-4" />;[m
       case 'workout': return <Target className="w-4 h-4" />;[m
       case 'progress': return <TrendingUp className="w-4 h-4" />;[m
       case 'meal': return <Utensils className="w-4 h-4" />;[m
[36m@@ -97,7 +96,6 @@[m [mconst PostCard: React.FC<PostCardProps> = ({ post, onInteraction }) => {[m
   const getPostTypeColor = () => {[m
     switch (post.type) {[m
       case 'photo': return 'text-purple-600 bg-purple-100';[m
[31m-      case 'video': return 'text-red-600 bg-red-100';[m
       case 'workout': return 'text-blue-600 bg-blue-100';[m
       case 'progress': return 'text-green-600 bg-green-100';[m
       case 'meal': return 'text-orange-600 bg-orange-100';[m
[1mdiff --git a/client/src/config/api.ts b/client/src/config/api.ts[m
[1mindex b4d00ca..38efc89 100644[m
[1m--- a/client/src/config/api.ts[m
[1m+++ b/client/src/config/api.ts[m
[36m@@ -1,3 +1,5 @@[m
[32m+[m[32mimport axios from 'axios';[m
[32m+[m
 // API Configuration for different environments[m
 const API_BASE_URL = process.env.REACT_APP_API_URL || [m
   (process.env.NODE_ENV === 'production' [m
[36m@@ -13,4 +15,34 @@[m [mexport const API_CONFIG = {[m
   },[m
 };[m
 [m
[32m+[m[32m// Create axios instance with default configuration[m
[32m+[m[32mconst api = axios.create(API_CONFIG);[m
[32m+[m
[32m+[m[32m// Add request interceptor to include auth token[m
[32m+[m[32mapi.interceptors.request.use([m
[32m+[m[32m  (config) => {[m
[32m+[m[32m    const token = localStorage.getItem('token');[m
[32m+[m[32m    if (token) {[m
[32m+[m[32m      config.headers['x-auth-token'] = token;[m
[32m+[m[32m    }[m
[32m+[m[32m    return config;[m
[32m+[m[32m  },[m
[32m+[m[32m  (error) => {[m
[32m+[m[32m    return Promise.reject(error);[m
[32m+[m[32m  }[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m// Add response interceptor for error handling[m
[32m+[m[32mapi.interceptors.response.use([m
[32m+[m[32m  (response) => response,[m
[32m+[m[32m  (error) => {[m
[32m+[m[32m    if (error.response?.status === 401) {[m
[32m+[m[32m      localStorage.removeItem('token');[m
[32m+[m[32m      window.location.href = '/login';[m
[32m+[m[32m    }[m
[32m+[m[32m    return Promise.reject(error);[m
[32m+[m[32m  }[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32mexport { api };[m
 export default API_CONFIG;[m
